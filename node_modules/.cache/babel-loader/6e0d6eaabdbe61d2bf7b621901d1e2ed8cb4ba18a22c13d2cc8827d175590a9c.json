{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sudar\\\\OneDrive\\\\Desktop\\\\portfolio\\\\campus-companion\\\\src\\\\components\\\\ThemeToggle.tsx\";\nimport { Sun, Moon } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeToggle = ({\n  theme,\n  onThemeChange\n}) => {\n  const toggleTheme = () => {\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    onThemeChange(newTheme);\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: toggleTheme,\n    className: \"fixed top-4 right-4 z-50 p-3 rounded-full bg-white dark:bg-gray-800 shadow-lg border border-gray-200 dark:border-gray-700 transition-all duration-300 hover:scale-110 focus:outline-none focus:ring-2 focus:ring-primary-500\",\n    \"aria-label\": `Switch to ${theme === 'light' ? 'dark' : 'light'} mode`,\n    children: theme === 'light' ? /*#__PURE__*/_jsxDEV(Moon, {\n      className: \"w-5 h-5 text-gray-700\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Sun, {\n      className: \"w-5 h-5 text-yellow-400\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = ThemeToggle;\nexport default ThemeToggle;\nvar _c;\n$RefreshReg$(_c, \"ThemeToggle\");","map":{"version":3,"names":["Sun","Moon","jsxDEV","_jsxDEV","ThemeToggle","theme","onThemeChange","toggleTheme","newTheme","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sudar/OneDrive/Desktop/portfolio/campus-companion/src/components/ThemeToggle.tsx"],"sourcesContent":["import { Sun, Moon } from 'lucide-react';\r\nimport { Theme } from '../types';\r\n\r\ninterface ThemeToggleProps {\r\n  theme: Theme;\r\n  onThemeChange: (theme: Theme) => void;\r\n}\r\n\r\nconst ThemeToggle: React.FC<ThemeToggleProps> = ({ theme, onThemeChange }) => {\r\n  const toggleTheme = () => {\r\n    const newTheme = theme === 'light' ? 'dark' : 'light';\r\n    onThemeChange(newTheme);\r\n  };\r\n\r\n  return (\r\n    <button\r\n      onClick={toggleTheme}\r\n      className=\"fixed top-4 right-4 z-50 p-3 rounded-full bg-white dark:bg-gray-800 shadow-lg border border-gray-200 dark:border-gray-700 transition-all duration-300 hover:scale-110 focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n      aria-label={`Switch to ${theme === 'light' ? 'dark' : 'light'} mode`}\r\n    >\r\n      {theme === 'light' ? (\r\n        <Moon className=\"w-5 h-5 text-gray-700\" />\r\n      ) : (\r\n        <Sun className=\"w-5 h-5 text-yellow-400\" />\r\n      )}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ThemeToggle; "],"mappings":";AAAA,SAASA,GAAG,EAAEC,IAAI,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQzC,MAAMC,WAAuC,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAc,CAAC,KAAK;EAC5E,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,QAAQ,GAAGH,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;IACrDC,aAAa,CAACE,QAAQ,CAAC;EACzB,CAAC;EAED,oBACEL,OAAA;IACEM,OAAO,EAAEF,WAAY;IACrBG,SAAS,EAAC,8NAA8N;IACxO,cAAY,aAAaL,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,OAAQ;IAAAM,QAAA,EAEpEN,KAAK,KAAK,OAAO,gBAChBF,OAAA,CAACF,IAAI;MAACS,SAAS,EAAC;IAAuB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE1CZ,OAAA,CAACH,GAAG;MAACU,SAAS,EAAC;IAAyB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAC3C;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEb,CAAC;AAACC,EAAA,GAnBIZ,WAAuC;AAqB7C,eAAeA,WAAW;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}